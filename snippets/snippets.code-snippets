{
	"Personal Prefer StatusManager Examples": {
		"prefix": "/ppse",
		"description": "纯js实现的状态管理器例子",
		"scope": "javascript",
		"body": [
			"/**",
			" * 纯js状态管理",
			" */",
			"class StatusManager {",
			"  constructor(statusList) {",
			"    this.status = -1;",
			"    this.statusList = statusList;",
			"  }",
			"  setStep(step) {",
			"    this.status = this.statusList.indexOf(step) - 1;",
			"  }",
			"  checkAndUpdate(mode) {",
			"    mode == 1 ? this.status++ : this.status--;",
			"  }",
			"  when(step, callback) {",
			"    let currentStep = this.statusList.indexOf(step);",
			"    if (currentStep == -1) throw new Error(\"wrong step!\");",
			"    if (this.status == currentStep) callback();",
			"  }",
			"  confirm(mode, type) {",
			"    return !(mode == 0 && type == 1);",
			"  }",
			"}",
			"",
			"let count = 0;",
			"let text = \"\";",
			"let singlePrice = 0;",
			"",
			"const map = new Map([",
			"  [\"苹果\", 6],",
			"  [\"橘子\", 5],",
			"]);",
			"// 定义步骤 ， 默认左往右执行",
			"const sm = new StatusManager([\"buy_what\", \"number\", \"confirm\", \"show\", \"end\"]);",
			"",
			"function start() {",
			"  action(1, 0, 0);",
			"}",
			"",
			"function action(mode, type, selection) {",
			"  sm.checkAndUpdate(mode);",
			"",
			"  sm.when(\"buy_what\", function () {",
			"    let menu = \"您要买什么?\\r\\n\";",
			"    menu += \"======================\\r\\n\";",
			"    map.forEach((price, item) => (menu += `\\${item} : \\${price} 元\\r\\n`));",
			"    menu += \"======================\\r\\n\";",
			"    cm.sendGetText(menu);",
			"  });",
			"",
			"  sm.when(\"number\", function () {",
			"    text = cm.getText();",
			"    if (!map.has(text)) {",
			"      cm.sendOk(`我们不卖 [ \\${text} ]`);",
			"      sm.setStep(\"buy_what\");",
			"      return;",
			"    }",
			"    singlePrice = map.get(text);",
			"    cm.sendGetNumber(",
			"      `\\${text} 一个 \\${singlePrice} 元 ,要买几个?(一次最多买50个)`,",
			"      1,",
			"      1,",
			"      50",
			"    );",
			"  });",
			"",
			"  sm.when(\"confirm\", function () {",
			"    count = selection;",
			"    cm.sendYesNo(\"确认?\");",
			"  });",
			"",
			"  sm.when(\"show\", function () {",
			"    if (sm.confirm(mode, type)) {",
			"      const all = count * singlePrice;",
			"      cm.sendOk(`一共是 \\${all} 元`);",
			"      cm.playerMessage(",
			"        6,",
			"        `[${cm",
			"          .getPlayer()",
			"          .getName()}] 于 ${new Date().toLocaleString()} 买了 \\${count} 个 \\${text} ,  合计 \\${all} 元！`",
			"      );",
			"    } else {",
			"      sm.setStep(\"number\");",
			"    }",
			"  });",
			"",
			"  sm.when(\"end\", function () {",
			"    cm.dispose();",
			"  });",
			"}",
			""
		]
	},
	"Personal Prefer StatusManager": {
		"prefix": "/pps",
		"description": "纯js实现的状态管理器",
		"scope": "javascript",
		"body": [
			"/**",
			" * 纯js状态管理",
			" */",
			"class StatusManager {",
			"  constructor(statusList) {",
			"    this.status = -1;",
			"    this.statusList = statusList;",
			"  }",
			"  setStep(step) {",
			"    this.status = this.statusList.indexOf(step) - 1;",
			"  }",
			"  checkAndUpdate(mode) {",
			"    mode == 1 ? this.status++ : this.status--;",
			"  }",
			"  when(step, callback) {",
			"    let currentStep = this.statusList.indexOf(step);",
			"    if (currentStep == -1) throw new Error(\"wrong step!\");",
			"    if (this.status == currentStep) callback();",
			"  }",
			"  confirm(mode, type) {",
			"    return !(mode == 0 && type == 1);",
			"  }",
			"}",
			"",
			"const sm = new StatusManager([\"$1\", \"$2\"]);",
			"",
			"function start() {",
			"  action(1, 0, 0);",
			"}",
			"",
			"function action(mode, type, selection) {",
			"  sm.checkAndUpdate(mode);",
			"",
			"  sm.when(\"$1\", function () {",
			"     $3 ",
			"  });",
			"",
			"  sm.when(\"$2\", function () {",
			"  ",
			"  });",
			"}",
			""
		],
	},
	"Beidou Stateless Script Example": {
		"prefix": "/bsse",
		"description": "北斗特色无状态脚本实例",
		"scope": "javascript",
		"body": [
			"/**",
			" * @description 示例脚本2-nextLevel实现",
			" * 注意，所有的输入的nextLevel都是字符串类型的，不一定是数字",
			" * @author 昨日小睡",
			" */",
			"",
			"const BEI_DOU_SATELLITE_MANUAL = 2430033;",
			"const MAPLE_LEAF = 4001126;",
			"",
			"function start() {",
			"    levelStart();",
			"}",
			"",
			"/**",
			" * @description 如果是sendSelectLevel，那么会根据玩家的选项自动路由到对应的level+selection方法",
			" */",
			"function levelStart() {",
			"    let text = \"用以下物品可兑换 #r#t2430033##k #i2430033# 一本\\r\\n\\r\\n\";",
			"    text += \"#L0#1000万金币#l\\r\\n\";",
			"    text += \"#L1#1000点券#l\\r\\n\";",
			"    text += \"#L2#1万枫叶#l\\r\\n\";",
			"    text += \"#L3#兑换码#l\\r\\n\";",
			"    cm.sendSelectLevel(text);",
			"}",
			"",
			"function level0() {",
			"    if (cm.getMeso() < 10000000) {",
			"        cm.sendOk(\"金币不足\");",
			"        cm.dispose();",
			"    } else if (!cm.canHold(BEI_DOU_SATELLITE_MANUAL, 1)) {",
			"        cm.sendOk(\"背包空间不足\");",
			"        cm.dispose();",
			"    } else {",
			"        cm.gainMeso(-10000000);",
			"        successGain(1);",
			"    }",
			"}",
			"",
			"function level1() {",
			"    if (cm.getPlayer().getCashShop().getCash(1) < 1000) {",
			"        cm.sendOk(\"点券不足\");",
			"        cm.dispose();",
			"    } else if (!cm.canHold(BEI_DOU_SATELLITE_MANUAL, 1)) {",
			"        cm.sendOk(\"背包空间不足\");",
			"        cm.dispose();",
			"    } else {",
			"        cm.getPlayer().getCashShop().gainCash(1, -1000);",
			"        successGain(1);",
			"    }",
			"}",
			"",
			"/**",
			" * @description getInputNumberLevel 自定义下一步执行哪个level",
			" */",
			"function level2() {",
			"    let itemQuantity = cm.getItemQuantity(4001126);",
			"    if (itemQuantity >= 10000) {",
			"        cm.getInputNumberLevel(\"21\", \"请输入兑换数量\", 1, 1, 999);",
			"    } else {",
			"        cm.sendOk(\"枫叶不足\");",
			"        cm.dispose();",
			"    }",
			"}",
			"",
			"/**",
			" * @description 如果是getInputNumberLevel进来的，会自动把玩家输入的数字传入",
			" *",
			" * @param inputNum 玩家输入",
			" */",
			"function level21(inputNum) {",
			"    let itemQuantity = cm.getItemQuantity(MAPLE_LEAF);",
			"    let cost = inputNum * 10000;",
			"    if (itemQuantity < cost) {",
			"        cm.sendOk(\"枫叶不足\");",
			"        cm.dispose();",
			"    } else if (!cm.canHold(BEI_DOU_SATELLITE_MANUAL, inputNum)) {",
			"        cm.sendOk(\"背包空间不足\");",
			"        cm.dispose();",
			"    } else {",
			"        cm.gainItem(MAPLE_LEAF, -cost);",
			"        successGain(inputNum);",
			"    }",
			"}",
			"",
			"function level3() {",
			"    cm.getInputTextLevel(\"31\", \"请输入兑换码\");",
			"}",
			"",
			"/**",
			" * @description 如果是getInputTextLevel进来的，会自动把玩家输入的字符串传入",
			" *",
			" * @param inputText 玩家输入",
			" */",
			"function level31(inputText) {",
			"    if (\"BeiDou_YYDS\" === inputText) {",
			"        if (cm.canHold(BEI_DOU_SATELLITE_MANUAL, 1)) {",
			"            successGain(1);",
			"        } else {",
			"            cm.sendOk(\"背包空间不足\");",
			"            cm.dispose();",
			"        }",
			"    } else {",
			"        cm.sendOk(\"兑换码错误\");",
			"        cm.dispose();",
			"    }",
			"}",
			"",
			"function successGain(quantity) {",
			"    cm.gainItem(BEI_DOU_SATELLITE_MANUAL, quantity);",
			"    cm.sendOk(\"兑换成功\");",
			"    cm.dispose();",
			"}"
		]
	},
	"Beidou Stateless Script": {
		"prefix": "/bss",
		"description": "北斗特色无状态模板",
		"scope": "javascript",
		"body": [
			"function start() {",
			"    levelStart();",
			"}",
			"",
			"/**",
			" * @description 如果是sendSelectLevel，那么会根据玩家的选项自动路由到对应的level+selection方法",
			" */",
			"function levelStart() {",
			"   $1",
			"}",
			"",
			"function level0() {",
			"",
			"}",
			"",
			"function level1() {",
			"",
			"}",
			"",
			"function level2() {",
			"",
			"}",
			"",
			"function level21(inputText) {",
			" ",
			"}",
			"",
			"function level3() {",
			"",
			"}",
			" ",
			"function level31(inputText) {",
			"  ",
			"}",
			"",
			""
		]
	},
	"Vanilla": {
		"prefix": "/v",
		"description": "北斗特色无状态模板",
		"scope": "javascript",
		"body": [
			"var status = -1;",
			"",
			"function start() {",
			"  status = -1;",
			"  action(1, 0, 0);",
			"}",
			"",
			"function action(mode, type, selection) {",
			"  $1",
			"}",
		]
	}
}